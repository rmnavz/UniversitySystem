// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Navz.UniversitySystem.Persistence;

namespace Navz.UniversitySystem.Persistence.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Navz.UniversitySystem.Domain.Entities.Administrator", b =>
                {
                    b.Property<int>("ID");

                    b.Property<int>("AdminType");

                    b.Property<DateTime>("Created");

                    b.Property<DateTime>("Modified");

                    b.HasKey("ID");

                    b.ToTable("Administrators");
                });

            modelBuilder.Entity("Navz.UniversitySystem.Domain.Entities.Audit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateTime");

                    b.Property<string>("KeyValues");

                    b.Property<string>("NewValues");

                    b.Property<string>("OldValues");

                    b.Property<string>("TableName");

                    b.HasKey("Id");

                    b.ToTable("Audits");
                });

            modelBuilder.Entity("Navz.UniversitySystem.Domain.Entities.Department", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code");

                    b.Property<DateTime>("Created");

                    b.Property<string>("Description");

                    b.Property<DateTime>("Modified");

                    b.Property<string>("Name");

                    b.HasKey("ID");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("Navz.UniversitySystem.Domain.Entities.Subject", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code");

                    b.Property<DateTime>("Created");

                    b.Property<int?>("DepartmentID");

                    b.Property<string>("Description");

                    b.Property<DateTime>("Modified");

                    b.Property<string>("Name");

                    b.HasKey("ID");

                    b.HasIndex("DepartmentID");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("Navz.UniversitySystem.Domain.Entities.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created");

                    b.Property<string>("EmailAddress");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<DateTime>("Modified");

                    b.Property<int>("UserType");

                    b.HasKey("ID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Navz.UniversitySystem.Domain.Entities.Administrator", b =>
                {
                    b.HasOne("Navz.UniversitySystem.Domain.Entities.User", "User")
                        .WithOne("Administrator")
                        .HasForeignKey("Navz.UniversitySystem.Domain.Entities.Administrator", "ID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Navz.UniversitySystem.Domain.Entities.Subject", b =>
                {
                    b.HasOne("Navz.UniversitySystem.Domain.Entities.Department", "Department")
                        .WithMany("Subjects")
                        .HasForeignKey("DepartmentID");
                });

            modelBuilder.Entity("Navz.UniversitySystem.Domain.Entities.User", b =>
                {
                    b.OwnsOne("Navz.UniversitySystem.Domain.ValueObjects.Encrypted", "Password", b1 =>
                        {
                            b1.Property<int>("UserID")
                                .ValueGeneratedOnAdd()
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<byte[]>("Hash");

                            b1.Property<byte[]>("Salt");

                            b1.HasKey("UserID");

                            b1.ToTable("Users");

                            b1.HasOne("Navz.UniversitySystem.Domain.Entities.User")
                                .WithOne("Password")
                                .HasForeignKey("Navz.UniversitySystem.Domain.ValueObjects.Encrypted", "UserID")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
